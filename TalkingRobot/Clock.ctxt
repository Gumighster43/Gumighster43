#BlueJ class context
comment0.target=Clock
comment0.text=\n\ Talking\ Robot\:\ <br>\n\ The\ Clock\ class\ is\ a\ "stub"\ for\ a\ class\ that\ should\ return\ the\n\ hour\ of\ the\ current\ time\ of\ day\ as\ represented\ by\ a\ 24-hour\ clock\n\ (in\ other\ words,\ in\ the\ range\ of\ 0\ ..\ 23).\ \ An\ object\ of\ this\ class,\n\ however,\ can\ be\ set\ to\ generate\ random\ times\ for\ testing\ purposes,\n\ instead\ of\ always\ returning\ the\ current\ hour,\ or\ can\ be\ set\ to\ return\n\ times\ from\ a\ pre-defined\ set\ of\ test\ cases.\n\ <br>\ <br>\n\ Created\:\ <br>\n\ \ \ 17\ December\ 2015,\ \ Alyce\ Brady<br>\n\ \n\ @author\ Alyce\ Brady\n\ @version\ 17\ December\ 2015\n
comment1.params=
comment1.target=Clock()
comment1.text=\n\ Construct\ a\ clock\ that\ knows\ about\ the\ current\ time.\n
comment10.params=hour
comment10.target=void\ setHour(int)
comment10.text=\n\ Sets\ the\ time\ to\ an\ hour\ in\ the\ range\ of\ 0\ -\ 23.\n\ \n\ \ \ \ \ \ @param\ \ hour\ \ \ hour\ to\ set\ the\ clock\ to\ (0\ -\ 23)\n
comment11.params=minute
comment11.target=void\ setMinute(int)
comment11.text=\n\ Sets\ the\ time\ to\ a\ minute\ in\ the\ range\ of\ 0\ -\ 59.\n\ \n\ \ \ \ \ \ @param\ \ minute\ \ \ minute\ to\ set\ the\ clock\ to\ (0\ -\ 59)\n
comment2.params=
comment2.target=void\ randomizeTimes()
comment2.text=\n\ Puts\ the\ clock\ in\ a\ "randomizing"\ state,\ where\ it\ returns\ random\n\ times\ rather\ than\ the\ current\ time.\n
comment3.params=hr
comment3.target=void\ addTestCase(int)
comment3.text=\n\ Add\ a\ specific\ hour\ to\ the\ test\ suite\ (the\ test\ suite\ just\n\ contains\ hours,\ not\ minutes).\n\ \ \ \ \ \ @param\ \ hour\ \ \ hour\ to\ add\ to\ the\ test\ suite\ (0\ -\ 23)\n
comment4.params=
comment4.target=int\ getNumTestCases()
comment4.text=\n\ Returns\ the\ number\ of\ test\ cases\ that\ have\ been\ added.\n\ \ \ \ \ \ @return\ \ the\ number\ of\ test\ cases\ added\ with\ addTestCase\n
comment5.params=
comment5.target=void\ changeTime()
comment5.text=\n\ Change\ clock\ to\ another\ time.\n\ This\ method\ advances\ the\ clock\ to\ the\ next\ minute,\ unless\ the\n\ clock\ has\ been\ set\ to\ randomize\ times\ or\ use\ a\ test\ suite.\ \ If\n\ the\ clock\ is\ randomizing\ times,\ this\ method\ will\ generate\ a\ new,\n\ random\ time.\ \ If\ the\ clock\ is\ using\ a\ test\ suite,\ it\ will\ advance\n\ to\ the\ next\ time\ in\ the\ test\ suite\ until\ it\ reaches\ the\ end,\ at\n\ which\ point\ it\ will\ start\ issuing\ random\ times\ instead.\n
comment6.params=
comment6.target=int\ getHour()
comment6.text=\n\ Returns\ an\ hour\ in\ the\ range\ of\ 0\ -\ 23.\ \ Returns\n\ the\ current\ time\ of\ day,\ but\ is\ actually\ a\ random\ hour.)\n\ \n\ @return\ \ \ \ \ the\ hour\ \n
comment7.params=
comment7.target=int\ getMinute()
comment7.text=\n\ Returns\ a\ minute\ in\ the\ range\ of\ 0\ -\ 59.\ \ (Should\ be\ the\ hour\ of\n\ the\ current\ time\ of\ day,\ but\ is\ actually\ a\ random\ hour.)\n\ \n\ @return\ \ \ \ \ the\ minute\ \n
comment8.params=
comment8.target=java.lang.String\ getHH()
comment8.text=\n\ Returns\ the\ current\ hour\ in\ 12-hour\ HH\ format\ (01\ -\ 12).\n\ \n\ @return\ \ \ \ \ the\ hour\ in\ HH\ format\n
comment9.params=
comment9.target=java.lang.String\ getMM()
comment9.text=\n\ Returns\ the\ current\ minute\ in\ MM\ format\ (00\ -\ 59).\n\ \n\ @return\ \ \ \ \ the\ minute\ in\ MM\ format\n
numComments=12
